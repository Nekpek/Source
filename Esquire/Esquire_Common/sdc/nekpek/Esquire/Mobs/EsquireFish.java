// Date: 02-08-2013 22:59:46
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package sdc.nekpek.Esquire.Mobs;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class EsquireFish extends ModelBase
    {
        // fields
        ModelRenderer Fish_Head_;
        ModelRenderer Fish_Mouth;
        ModelRenderer Front_Body;
        ModelRenderer Mid_Body;
        ModelRenderer lower_mid_Body;
        ModelRenderer End_Body;
        ModelRenderer Start_Tail;
        ModelRenderer End_Tail;
        ModelRenderer Top_Tail;
        ModelRenderer outer_Top_Tail_;
        ModelRenderer Bottom_Tail;
        ModelRenderer Outer_Bottom_Tail;
        ModelRenderer upper_Finn_Lower_part;
        ModelRenderer Upper_Finn_End;
        ModelRenderer Upper_Left_Finn;
        ModelRenderer Lower_Left_Finn;
        ModelRenderer Upper_Right_Finn;
        ModelRenderer Lower_Right_Finn;
        ModelRenderer Lower_Right_Finn_Front;
        ModelRenderer Lower_Left_Finn_Front;
        ModelRenderer Lower_Mid_Finn;

        public EsquireFish()
            {
                textureWidth = 64;
                textureHeight = 32;

                Fish_Head_ = new ModelRenderer(this, 0, 0);
                Fish_Head_.addBox(0.5F, 0.15F, 0F, 2, 3, 3);
                Fish_Head_.setRotationPoint(-1F, 18.86667F, -8.333333F);
                Fish_Head_.setTextureSize(64, 32);
                Fish_Head_.mirror = true;
                setRotation(Fish_Head_, 0.7853982F, 0F, 0F);
                Fish_Mouth = new ModelRenderer(this, 10, 0);
                Fish_Mouth.addBox(0.5F, 0F, 0F, 2, 2, 2);
                Fish_Mouth.setRotationPoint(-1F, 21F, -6.3F);
                Fish_Mouth.setTextureSize(64, 32);
                Fish_Mouth.mirror = true;
                setRotation(Fish_Mouth, 2.478368F, 0F, 0F);
                Front_Body = new ModelRenderer(this, 0, 24);
                Front_Body.addBox(0F, 0F, 0F, 3, 4, 4);
                Front_Body.setRotationPoint(-1F, 17F, -6.1F);
                Front_Body.setTextureSize(64, 32);
                Front_Body.mirror = true;
                setRotation(Front_Body, 0F, 0F, 0F);
                Mid_Body = new ModelRenderer(this, 15, 21);
                Mid_Body.addBox(-0.5F, -0.5F, 0F, 4, 5, 6);
                Mid_Body.setRotationPoint(-1F, 17F, -3F);
                Mid_Body.setTextureSize(64, 32);
                Mid_Body.mirror = true;
                setRotation(Mid_Body, 0F, 0F, 0F);
                lower_mid_Body = new ModelRenderer(this, 36, 23);
                lower_mid_Body.addBox(0F, 0F, 0F, 3, 4, 5);
                lower_mid_Body.setRotationPoint(-1F, 17F, 3F);
                lower_mid_Body.setTextureSize(64, 32);
                lower_mid_Body.mirror = true;
                setRotation(lower_mid_Body, 0F, 0F, 0F);
                End_Body = new ModelRenderer(this, 53, 26);
                End_Body.addBox(0.5F, 0.5F, 0F, 2, 3, 3);
                End_Body.setRotationPoint(-1F, 17F, 8F);
                End_Body.setTextureSize(64, 32);
                End_Body.mirror = true;
                setRotation(End_Body, 0F, 0F, 0F);
                Start_Tail = new ModelRenderer(this, 53, 21);
                Start_Tail.addBox(1F, 0F, 0F, 1, 2, 2);
                Start_Tail.setRotationPoint(-1F, 18F, 11F);
                Start_Tail.setTextureSize(64, 32);
                Start_Tail.mirror = true;
                setRotation(Start_Tail, 0F, 0F, 0F);
                End_Tail = new ModelRenderer(this, 60, 23);
                End_Tail.addBox(0F, 0.5F, 0F, 1, 1, 1);
                End_Tail.setRotationPoint(0F, 18F, 13F);
                End_Tail.setTextureSize(64, 32);
                End_Tail.mirror = true;
                setRotation(End_Tail, 0F, 0F, 0F);
                Top_Tail = new ModelRenderer(this, 59, 1);
                Top_Tail.addBox(0.5F, 0F, 0F, 0, 4, 2);
                Top_Tail.setRotationPoint(0F, 15F, 14.7F);
                Top_Tail.setTextureSize(64, 32);
                Top_Tail.mirror = true;
                setRotation(Top_Tail, -0.6981317F, 0F, 0F);
                outer_Top_Tail_ = new ModelRenderer(this, 60, 2);
                outer_Top_Tail_.addBox(0.5F, 0F, 0F, 0, 3, 1);
                outer_Top_Tail_.setRotationPoint(0F, 17F, 15.6F);
                outer_Top_Tail_.setTextureSize(64, 32);
                outer_Top_Tail_.mirror = true;
                setRotation(outer_Top_Tail_, -0.6981317F, 0F, 0F);
                Bottom_Tail = new ModelRenderer(this, 59, 1);
                Bottom_Tail.addBox(-0.5F, 0F, 0F, 0, 4, 2);
                Bottom_Tail.setRotationPoint(1F, 20F, 12.3F);
                Bottom_Tail.setTextureSize(64, 32);
                Bottom_Tail.mirror = true;
                setRotation(Bottom_Tail, 0.6981317F, 0F, 0F);
                Outer_Bottom_Tail = new ModelRenderer(this, 60, 2);
                Outer_Bottom_Tail.addBox(0.5F, 0F, 0F, 0, 3, 1);
                Outer_Bottom_Tail.setRotationPoint(0F, 19F, 14F);
                Outer_Bottom_Tail.setTextureSize(64, 32);
                Outer_Bottom_Tail.mirror = true;
                setRotation(Outer_Bottom_Tail, 0.6981317F, 0F, 0F);
                upper_Finn_Lower_part = new ModelRenderer(this, 38, 0);
                upper_Finn_Lower_part.addBox(0.5F, 0F, 0F, 0, 2, 6);
                upper_Finn_Lower_part.setRotationPoint(0F, 14.7F, 0F);
                upper_Finn_Lower_part.setTextureSize(64, 32);
                upper_Finn_Lower_part.mirror = true;
                setRotation(upper_Finn_Lower_part, -0.4014257F, 0F, 0F);
                Upper_Finn_End = new ModelRenderer(this, 41, 3);
                Upper_Finn_End.addBox(0.5F, 0F, 0F, 0, 1, 3);
                Upper_Finn_End.setRotationPoint(0F, 14.1F, 1F);
                Upper_Finn_End.setTextureSize(64, 32);
                Upper_Finn_End.mirror = true;
                setRotation(Upper_Finn_End, -0.418879F, 0F, 0F);
                Upper_Left_Finn = new ModelRenderer(this, 31, 11);
                Upper_Left_Finn.addBox(0F, 0F, 0F, 0, 3, 1);
                Upper_Left_Finn.setRotationPoint(2.5F, 18.5F, -1F);
                Upper_Left_Finn.setTextureSize(64, 32);
                Upper_Left_Finn.mirror = true;
                setRotation(Upper_Left_Finn, 1.570796F, 0.9424778F, 0F);
                Lower_Left_Finn = new ModelRenderer(this, 31, 11);
                Lower_Left_Finn.addBox(0F, 0F, 0F, 0, 2, 1);
                Lower_Left_Finn.setRotationPoint(2.5F, 19.33333F, -1F);
                Lower_Left_Finn.setTextureSize(64, 32);
                Lower_Left_Finn.mirror = true;
                setRotation(Lower_Left_Finn, 1.570796F, 0.9424778F, 0F);
                Upper_Right_Finn = new ModelRenderer(this, 31, 11);
                Upper_Right_Finn.addBox(0F, 0F, 0F, 0, 3, 1);
                Upper_Right_Finn.setRotationPoint(-3.9F, 17.6F, 0F);
                Upper_Right_Finn.setTextureSize(64, 32);
                Upper_Right_Finn.mirror = true;
                setRotation(Upper_Right_Finn, -1.570796F, -0.9424778F, 0F);
                Lower_Right_Finn = new ModelRenderer(this, 31, 11);
                Lower_Right_Finn.addBox(0F, 0F, 0F, 0, 2, 1);
                Lower_Right_Finn.setRotationPoint(-1F, 19.5F, -2.1F);
                Lower_Right_Finn.setTextureSize(64, 32);
                Lower_Right_Finn.mirror = true;
                setRotation(Lower_Right_Finn, 1.570796F, -0.9599311F, 0F);
                Lower_Right_Finn_Front = new ModelRenderer(this, 24, 0);
                Lower_Right_Finn_Front.addBox(0.5F, 0F, 0F, 0, 3, 2);
                Lower_Right_Finn_Front.setRotationPoint(-1F, 21.4F, -2F);
                Lower_Right_Finn_Front.setTextureSize(64, 32);
                Lower_Right_Finn_Front.mirror = true;
                setRotation(Lower_Right_Finn_Front, 0.5061455F, 0F, 0F);
                Lower_Left_Finn_Front = new ModelRenderer(this, 24, 0);
                Lower_Left_Finn_Front.addBox(0F, 0F, 0F, 0, 3, 2);
                Lower_Left_Finn_Front.setRotationPoint(1.5F, 21.4F, -2F);
                Lower_Left_Finn_Front.setTextureSize(64, 32);
                Lower_Left_Finn_Front.mirror = true;
                setRotation(Lower_Left_Finn_Front, 0.5061455F, 0F, 0F);
                Lower_Mid_Finn = new ModelRenderer(this, 42, 11);
                Lower_Mid_Finn.addBox(0.5F, 0F, 0F, 0, 2, 2);
                Lower_Mid_Finn.setRotationPoint(0F, 19.5F, 7F);
                Lower_Mid_Finn.setTextureSize(64, 32);
                Lower_Mid_Finn.mirror = true;
                setRotation(Lower_Mid_Finn, -1.169371F, 0F, 0F);
            }

        @Override
        public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
            {
                super.render(entity, f, f1, f2, f3, f4, f5);
                // setRotationAngles(f, f1, f2, f3, f4, f5);
                Fish_Head_.render(f5);
                Fish_Mouth.render(f5);
                Front_Body.render(f5);
                Mid_Body.render(f5);
                lower_mid_Body.render(f5);
                End_Body.render(f5);
                Start_Tail.render(f5);
                End_Tail.render(f5);
                Top_Tail.render(f5);
                outer_Top_Tail_.render(f5);
                Bottom_Tail.render(f5);
                Outer_Bottom_Tail.render(f5);
                upper_Finn_Lower_part.render(f5);
                Upper_Finn_End.render(f5);
                Upper_Left_Finn.render(f5);
                Lower_Left_Finn.render(f5);
                Upper_Right_Finn.render(f5);
                Lower_Right_Finn.render(f5);
                Lower_Right_Finn_Front.render(f5);
                Lower_Left_Finn_Front.render(f5);
                Lower_Mid_Finn.render(f5);
            }

        private void setRotation(ModelRenderer model, float x, float y, float z)
            {
                model.rotateAngleX = x;
                model.rotateAngleY = y;
                model.rotateAngleZ = z;
            }

        @Override
        public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
            {
                // super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
            }
    }
